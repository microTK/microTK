{
  "name": "Microtk",
  "tagline": "A tiny javascript library",
  "body": "# Global\r\n\r\n* * *\r\n\r\n### addAttribute(name, value) \r\n\r\nAdds an attribute to the selected elements.\r\n\r\n**Parameters**\r\n\r\n**name**: `string`, The attribute to be added.\r\n\r\n**value**: `string`, The value of the attribute.\r\n\r\n**Returns**: `microTK`, A copy of the microTK object.\r\n\r\n\r\n### addClass(className) \r\n\r\nAdds a class to the selected elements.\r\n\r\n**Parameters**\r\n\r\n**className**: `string`, The class to be added.\r\n\r\n**Returns**: `microTK`, A copy of the microTK object.\r\n\r\n\r\n### addEvent(event, action) \r\n\r\nAdds an event to the selected elements.\r\n\r\n**Parameters**\r\n\r\n**event**: `string`, Event to be added.\r\n\r\n**action**: `function`, Function to be run on event.\r\n\r\n**Returns**: `microTK`, A copy of the microTK object.\r\n\r\n\r\n### append(element) \r\n\r\nAppends an HTMLElement into the selected elements.\r\n\r\n**Parameters**\r\n\r\n**element**: `HTMLElement`, Element to be removed.\r\n\r\n**Returns**: `microTK`, A copy of the microTK object.\r\n\r\n\r\n### each(action) \r\n\r\nPerforms an action on the selected elements\r\n\r\n**Parameters**\r\n\r\n**action**: `elementAction`, Function to be run when the element has providec class.\r\n\r\n**Returns**: `microTK`, A copy of the microTK object.\r\n\r\n\r\n### hasAttribute(name, action) \r\n\r\nChecks to see if elements contains provided class and performs provided action.\r\n\r\n**Parameters**\r\n\r\n**name**: `string`, The attribute to be added.\r\n\r\n**action**: `elementAction`, Function to be run when the element has provided attribute.\r\n\r\n**Returns**: `microTK`, A copy of the microTK object.\r\n\r\n\r\n### hasClass(className, action) \r\n\r\nChecks to see ff elements contains provided class and performs provided action.\r\n\r\n**Parameters**\r\n\r\n**className**: `string`, Element to be tested for.\r\n\r\n**action**: `elementAction`, Function to be run when the element has providec class.\r\n\r\n**Returns**: `microTK`, A copy of the microTK object.\r\n\r\n\r\n### merge(object, callback) \r\n\r\nRecursivly merges objects.\r\n\r\n**Parameters**\r\n\r\n**object**: `Object`, The destination object.\r\n\r\n - **sourse...**: `Object`, The sourse objects.\r\n\r\n**callback**: `errorOnlyCallback`, Passes an error if one occures.\r\n\r\n**Returns**: `Object`, Returns the merged destination object.\r\n\r\n\r\n### prepend(element) \r\n\r\nPrepends an HTMLElement into the selected elements.\r\n\r\n**Parameters**\r\n\r\n**element**: `HTMLElement`, Element to be removed.\r\n\r\n**Returns**: `microTK`, A copy of the microTK object.\r\n\r\n\r\n### remove() \r\n\r\nRemoves the selected elements from the DOM.\r\n\r\n**Returns**: `microTK`, A copy of the microTK object.\r\n\r\n\r\n### removeAttribute(name) \r\n\r\nRemoves an attribute from the selected elements.\r\n\r\n**Parameters**\r\n\r\n**name**: `string`, The attribute to be added.\r\n\r\n**Returns**: `microTK`, A copy of the microTK object.\r\n\r\n\r\n### removeClass(className) \r\n\r\nRemoves a class from the selected elements.\r\n\r\n**Parameters**\r\n\r\n**className**: `string`, Class to be removed.\r\n\r\n**Returns**: `microTK`, A copy of the microTK object.\r\n\r\n\r\n### removeId() \r\n\r\nRemoves the id from the selected elements.\r\n\r\n**Returns**: `microTK`, A copy of the microTK object.\r\n\r\n\r\n### toggleClass(className) \r\n\r\nToggles a class in selected elements.\r\n\r\n**Parameters**\r\n\r\n**className**: `string`, Class to be toggled.\r\n\r\n**Returns**: `microTK`, A copy of the microTK object.\r\n\r\n\r\n\r\n* * *\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}